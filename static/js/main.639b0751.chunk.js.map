{"version":3,"sources":["assets/icons/logo.svg","components/Movies/movies-actions.ts","store/initial-state.ts","components/Movies/movies-reducer.ts","components/MovieInfo/movieInfo-actions.ts","components/MovieInfo/movieInfo-reducer.ts","store/store.ts","components/shared/Header.tsx","components/shared/MovieScroll.tsx","components/shared/MovieGenre.tsx","components/shared/MovieRatings.tsx","components/shared/MovieCard.tsx","components/shared/ArrowDownSvg.tsx","components/shared/FilterWidget.tsx","hooks/UsePopulateMovies.ts","components/Movies/Movies.tsx","components/MovieInfo/MovieInfoPage.tsx","components/SearchPage/SearchPage.tsx","components/GenresPage/GenresPage.tsx","components/RandomPage/RandomPage.tsx","components/shared/Footer.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","MoviesActionTypes","tmdbInitialState","genres","id","name","imageUrl","apiUrl","apiKey","process","endpointPaths","searchMovie","searchMovieById","searchTv","trendingTv","trendingTvToday","trendingMovies","trendingMoviesToday","popularMovies","cast","MovieInfoActionTypes","initialState","popular","trending","movies","rootReducer","combineReducers","tmdb","state","action","type","ADD_POPULAR_MOVIES_TO_LIST","payload","ADD_TRENDING_MOVIES_TO_LIST","movieInfo","ADD_MOVIE","enhancers","compose","applyMiddleware","thunk","window","devToolsExtension","f","store","createStore","Header","browserHistory","useHistory","searchQuery","useRef","toggleOpen","e","menuElem","document","querySelector","classList","value","indexOf","add","preventDefault","remove","className","onClick","push","src","logo","alt","height","viewBox","width","xmlns","d","ref","onFocus","currentTarget","contains","placeholder","current","to","MovieScrollSection","MovieGenre","genre","MovieRatings","rating","votes","MovieCard","movie","style","backgroundImage","backdrop_path","original_title","genre_ids","map","genreId","find","key","overview","slice","vote_average","vote_count","ArrowDownSvg","isExpanded","fill","FilterWidget","filteredGenre","setFilteredGenre","useState","setIsExpanded","useSelector","MovieScroll","section","filteredMovies","filter","includes","toLowerCase","search","charAt","toUpperCase","length","poster_path","usePopulateMovies","dispatch","useDispatch","useEffect","a","axios","get","response","data","results","actions","Movies","MovieInfoPage","match","parseInt","params","movieResp","replace","castResp","release_date","runtime","member","profile_path","character","SearchPage","searchResults","setSearchResults","query","GenresPage","location","moviesFromState","genreFromQuery","setGenreFromQuery","setMovies","genreValueFromQuery","decodeURI","genreMatched","concatinatedMovies","some","forEach","m","RandomPage","movieList","randomNum","Math","floor","random","Footer","href","target","App","persist","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.639b0751.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5b0c2cbf.svg\";","export enum MoviesActionTypes {\r\n  ADD_POPULAR_MOVIES_TO_LIST = \"ADD_POPULAR_MOVIES_TO_LIST\",\r\n  ADD_TRENDING_MOVIES_TO_LIST = \"ADD_TRENDING_MOVIES_TO_LIST\",\r\n}\r\n","export interface TmdbState {\r\n  imageUrl: string;\r\n  apiUrl: string;\r\n  apiKey: string;\r\n  genres: Genre[];\r\n  endpointPaths: Enpoints;\r\n}\r\n\r\nexport interface Genre {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nexport interface Enpoints {\r\n  searchMovie: string;\r\n  searchMovieById: string;\r\n  searchTv: string;\r\n  trendingTv: string;\r\n  trendingTvToday: string;\r\n  trendingMovies: string;\r\n  trendingMoviesToday: string;\r\n  popularMovies: string;\r\n  cast: string;\r\n}\r\n\r\nexport const tmdbInitialState: TmdbState = {\r\n  genres: [\r\n    {\r\n      id: -1,\r\n      name: \"\",\r\n    },\r\n    {\r\n      id: 28,\r\n      name: \"Action\",\r\n    },\r\n    {\r\n      id: 12,\r\n      name: \"Adventure\",\r\n    },\r\n    {\r\n      id: 16,\r\n      name: \"Animation\",\r\n    },\r\n    {\r\n      id: 35,\r\n      name: \"Comedy\",\r\n    },\r\n    {\r\n      id: 80,\r\n      name: \"Crime\",\r\n    },\r\n    {\r\n      id: 99,\r\n      name: \"Documentary\",\r\n    },\r\n    {\r\n      id: 18,\r\n      name: \"Drama\",\r\n    },\r\n    {\r\n      id: 10751,\r\n      name: \"Family\",\r\n    },\r\n    {\r\n      id: 14,\r\n      name: \"Fantasy\",\r\n    },\r\n    {\r\n      id: 36,\r\n      name: \"History\",\r\n    },\r\n    {\r\n      id: 27,\r\n      name: \"Horror\",\r\n    },\r\n    {\r\n      id: 10402,\r\n      name: \"Music\",\r\n    },\r\n    {\r\n      id: 9648,\r\n      name: \"Mystery\",\r\n    },\r\n    {\r\n      id: 10749,\r\n      name: \"Romance\",\r\n    },\r\n    {\r\n      id: 878,\r\n      name: \"Science Fiction\",\r\n    },\r\n    {\r\n      id: 10770,\r\n      name: \"TV Movie\",\r\n    },\r\n    {\r\n      id: 53,\r\n      name: \"Thriller\",\r\n    },\r\n    {\r\n      id: 10752,\r\n      name: \"War\",\r\n    },\r\n    {\r\n      id: 37,\r\n      name: \"Western\",\r\n    },\r\n  ],\r\n  imageUrl: \"https://image.tmdb.org/t/p/original\",\r\n  apiUrl: \"https://api.themoviedb.org/3\",\r\n  apiKey: process.env.REACT_APP_API_KEY as string,\r\n  endpointPaths: {\r\n    searchMovie: \"/search/movie\",\r\n    searchMovieById: \"/movie/\",\r\n    searchTv: \"/search/tv\",\r\n    trendingTv: \"/trending/tv/week\",\r\n    trendingTvToday: \"/trending/tv/day\",\r\n    trendingMovies: \"/trending/movie/week\",\r\n    trendingMoviesToday: \"/trending/movie/day\",\r\n    popularMovies: \"/movie/popular\",\r\n    cast: \"/movie/%ID%/credits\",\r\n  },\r\n};\r\n","import { IAction } from \"../../store/store\";\r\nimport { MoviesActionTypes } from \"./movies-actions\";\r\n\r\nexport interface MoviesState {\r\n  popular: Movie[];\r\n  trending: Movie[];\r\n}\r\n\r\nexport interface Movie {\r\n  popularity: number;\r\n  vote_count: number;\r\n  video: boolean;\r\n  poster_path: string;\r\n  id: number;\r\n  adult: boolean;\r\n  backdrop_path: string;\r\n  original_language: string;\r\n  original_title: string;\r\n  genre_ids: number[];\r\n  title: string;\r\n  vote_average: number;\r\n  overview: string;\r\n  release_date: string;\r\n}\r\n\r\nconst initialState: MoviesState = {\r\n  popular: [],\r\n  trending: [],\r\n};\r\n\r\nexport const moviesReducer = (\r\n  state: MoviesState = initialState,\r\n  action: IAction<MoviesActionTypes, any>\r\n): MoviesState => {\r\n  switch (action.type) {\r\n    case MoviesActionTypes.ADD_POPULAR_MOVIES_TO_LIST:\r\n      return {\r\n        ...state,\r\n        popular: action.payload as Movie[],\r\n      } as MoviesState;\r\n\r\n    case MoviesActionTypes.ADD_TRENDING_MOVIES_TO_LIST:\r\n      return {\r\n        ...state,\r\n        trending: action.payload as Movie[],\r\n      } as MoviesState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export enum MovieInfoActionTypes {\r\n  ADD_MOVIE = \"ADD_MOVIE\",\r\n  ADD_CAST = \"ADD_CAST\",\r\n}\r\n","import { IAction } from \"../../store/store\";\r\nimport { MovieInfoActionTypes } from \"./movieInfo-actions\";\r\nimport { Genre } from \"../../store/initial-state\";\r\n\r\nexport interface MovieInfoState {\r\n  movies: MovieInfo[];\r\n}\r\n\r\nexport interface MovieInfo {\r\n  adult: boolean;\r\n  backdrop_path: string;\r\n  budget: 0;\r\n  genres: Genre[];\r\n  homepage: string;\r\n  id: number;\r\n  imdb_id: string;\r\n  original_language: string;\r\n  original_title: string;\r\n  overview: string;\r\n  popularity: number;\r\n  poster_path: string;\r\n  production_companies: MovieCompany[];\r\n  production_countries: CountryInfo[];\r\n  release_date: string;\r\n  revenue: number;\r\n  runtime: number;\r\n  spoken_languages: CountryInfo[];\r\n  status: string;\r\n  tagline: string;\r\n  title: string;\r\n  video: boolean;\r\n  vote_average: number;\r\n  vote_count: number;\r\n  cast: Cast[];\r\n}\r\n\r\nexport interface Cast {\r\n  cast_id: number;\r\n  character: string;\r\n  credit_id: string;\r\n  gender: number;\r\n  id: number;\r\n  name: string;\r\n  order: number;\r\n  profile_path: string;\r\n}\r\n\r\nexport interface MovieCompany {\r\n  id: number;\r\n  logo_path: string;\r\n  name: string;\r\n  origin_country: string;\r\n}\r\n\r\nexport interface CountryInfo {\r\n  iso_3166_1: string;\r\n  name: string;\r\n}\r\n\r\nconst initialState: MovieInfoState = {\r\n  movies: [],\r\n};\r\n\r\nexport const movieInfoReducer = (\r\n  state: MovieInfoState = initialState,\r\n  action: IAction<MovieInfoActionTypes, any>\r\n): MovieInfoState => {\r\n  switch (action.type) {\r\n    case MovieInfoActionTypes.ADD_MOVIE:\r\n      return {\r\n        ...state,\r\n        movies: [...state.movies, action.payload as MovieInfo],\r\n      } as MovieInfoState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers, compose } from \"redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { tmdbInitialState, TmdbState } from \"./initial-state\";\r\nimport { moviesReducer } from \"../components/Movies/movies-reducer\";\r\nimport { movieInfoReducer } from \"../components/MovieInfo/movieInfo-reducer\";\r\n\r\nexport interface IAction<A, P> {\r\n  type: A;\r\n  payload: P;\r\n}\r\n\r\nexport const tmdbReducer = (\r\n  state = tmdbInitialState,\r\n  action: IAction<any, TmdbState>\r\n): TmdbState => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  tmdb: tmdbReducer,\r\n  movies: moviesReducer,\r\n  movieInfo: movieInfoReducer,\r\n});\r\n\r\nconst enhancers = compose(\r\n  applyMiddleware(thunk),\r\n  (window as any).devToolsExtension\r\n    ? (window as any).devToolsExtension()\r\n    : (f: any) => f\r\n);\r\n\r\nexport const store = createStore(rootReducer, enhancers);\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import React, { ReactElement, useRef } from \"react\";\r\n\r\nimport logo from \"../../assets/icons/logo.svg\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nexport default function Header(): ReactElement {\r\n  const browserHistory = useHistory();\r\n  const searchQuery = useRef<HTMLInputElement>(null);\r\n\r\n  const goHome = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    browserHistory.push(\"/Mooweee/\");\r\n  };\r\n\r\n  const goToSearch = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!searchQuery.current || !searchQuery.current.value) {\r\n      if (\r\n        searchQuery.current &&\r\n        !searchQuery.current.classList.contains(\"error\")\r\n      ) {\r\n        searchQuery.current.classList.add(\"error\");\r\n        searchQuery.current.placeholder =\r\n          \"Have you forgot to enter movie title? 🤨\";\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    browserHistory.push(`/Mooweee/search/${searchQuery.current?.value}`);\r\n    searchQuery.current.value = \"\";\r\n  };\r\n\r\n  const onInputFocus = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    if (e.currentTarget.classList.contains(\"error\")) {\r\n      e.currentTarget.classList.remove(\"error\");\r\n    }\r\n\r\n    e.currentTarget.placeholder = \"Got any particular movie in mind?\";\r\n  };\r\n\r\n  const toggleOpen = (e: React.MouseEvent) => {\r\n    let menuElem = document.querySelector(\".nav\");\r\n\r\n    if (!menuElem) return;\r\n\r\n    if (menuElem.classList.value.indexOf(\"hide-mobile\") < 0) {\r\n      // close menu\r\n      menuElem.classList.add(\"hide-mobile\");\r\n      e.preventDefault();\r\n    } else {\r\n      menuElem.classList.remove(\"hide-mobile\");\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <div className=\"logo\" onClick={goHome}>\r\n          <img src={logo} alt=\"logo\" />\r\n          <h3 className=\"logo--text\">MooWeee!</h3>\r\n        </div>\r\n        <div className=\"nav--hamburger hide-desktop\">\r\n          <svg\r\n            className=\"nav--hamburger-icon\"\r\n            height=\"24\"\r\n            viewBox=\"0 -1 24 24\"\r\n            width=\"24\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            onClick={toggleOpen}\r\n          >\r\n            <path d=\"M4 5h16a1 1 0 0 1 0 2H4a1 1 0 1 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2z\" />\r\n          </svg>\r\n        </div>\r\n        <nav className=\"nav show-desktop hide-mobile\">\r\n          <div className=\"search--input--area\">\r\n            <input\r\n              ref={searchQuery}\r\n              onFocus={onInputFocus}\r\n              type=\"text\"\r\n              className=\"search--input\"\r\n              placeholder=\"Got any particular movie in mind?\"\r\n              name=\"search\"\r\n              id=\"\"\r\n            />\r\n\r\n            <button onClick={goToSearch}>Search</button>\r\n          </div>\r\n          <ul className=\"nav--list\" onClick={toggleOpen}>\r\n            <li className=\"nav--list--item\">\r\n              <Link to=\"/Mooweee/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav--list--item\">\r\n              <Link to=\"/Mooweee/genres\">Genres</Link>\r\n            </li>\r\n            <li className=\"nav--list--item\">\r\n              <Link to=\"/Mooweee/random\">Surprise Me</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n","import React, { ReactElement, useState } from \"react\";\r\n\r\nimport { Movie } from \"../Movies/movies-reducer\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport FilterWidget from \"./FilterWidget\";\r\nimport { RootState } from \"../../store/store\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface MovieScrollProps {\r\n  movies: Movie[];\r\n  section: MovieScrollSection;\r\n}\r\n\r\nexport enum MovieScrollSection {\r\n  popular = \"Popular\",\r\n  trending = \"Trending\",\r\n  search = \"Search\",\r\n}\r\n\r\nexport default function MovieScroll({\r\n  movies,\r\n  section,\r\n}: MovieScrollProps): ReactElement {\r\n  const tmdb = useSelector((state: RootState) => state.tmdb);\r\n  const [filteredGenre, setFilteredGenre] = useState({ id: -1, name: \"\" });\r\n  const filteredMovies =\r\n    filteredGenre.id !== -1\r\n      ? movies.filter((movie) => movie.genre_ids.includes(filteredGenre.id))\r\n      : movies;\r\n\r\n  return (\r\n    <>\r\n      <div className={`headline headline--${section.toLowerCase()}`}>\r\n        {section === MovieScrollSection.search ? (\r\n          <h1>Search page results</h1>\r\n        ) : (\r\n          <h1>{section.charAt(0).toUpperCase() + section.slice(1)} Movies</h1>\r\n        )}\r\n\r\n        <FilterWidget\r\n          filteredGenre={filteredGenre}\r\n          setFilteredGenre={setFilteredGenre}\r\n        />\r\n      </div>\r\n      <div className=\"movie--cards--wrapper scrollable\">\r\n        <div className=\"movie--cards--container\">\r\n          {filteredMovies.length ? (\r\n            filteredMovies.map((movie) => {\r\n              if (!movie.backdrop_path) movie.backdrop_path = movie.poster_path;\r\n\r\n              return (\r\n                <MovieCard tmdb={tmdb} movie={movie} key={movie.id}></MovieCard>\r\n              );\r\n            })\r\n          ) : section === MovieScrollSection.search ? (\r\n            <h2 className=\"movie--not-found\">\r\n              No Movies found. Try searching for something else.\r\n            </h2>\r\n          ) : (\r\n            <h2 className=\"movie--not-found\">\r\n              Looks like there are no {section.toLowerCase()}{\" \"}\r\n              {filteredGenre.name} movies.. 😅 <br /> Wanna try{\" \"}\r\n              <Link\r\n                className=\"movie--link\"\r\n                to={`/Mooweee/genre/${filteredGenre.name}`}\r\n              >\r\n                {filteredGenre.name}\r\n              </Link>{\" \"}\r\n              genre page?\r\n            </h2>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { ReactElement } from \"react\";\r\nimport { Genre } from \"../../store/initial-state\";\r\n\r\ninterface Props {\r\n  genre: Genre;\r\n}\r\n\r\nexport default function MovieGenre({ genre }: Props): ReactElement {\r\n  return <p className=\"movie--genre\">{genre.name}</p>;\r\n}\r\n","import React, { ReactElement } from \"react\";\r\n\r\ninterface RatingsProps {\r\n  rating: number;\r\n  votes: number;\r\n}\r\n\r\nexport default function MovieRatings({\r\n  rating,\r\n  votes,\r\n}: RatingsProps): ReactElement {\r\n  return (\r\n    <div className=\"movie--ratings\">\r\n      <h4>\r\n        {rating} / 10 🐮 ({votes} votes)\r\n      </h4>\r\n    </div>\r\n  );\r\n}\r\n","import React, { ReactElement } from \"react\";\r\nimport { Movie } from \"../Movies/movies-reducer\";\r\nimport { TmdbState } from \"../../store/initial-state\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MovieGenre from \"./MovieGenre\";\r\nimport MovieRatings from \"./MovieRatings\";\r\n\r\ninterface Props {\r\n  movie: Movie;\r\n  tmdb: TmdbState;\r\n}\r\n\r\nexport default function MovieCard({ movie, tmdb }: Props): ReactElement {\r\n  const browserHistory = useHistory();\r\n\r\n  const style: React.CSSProperties = {\r\n    backgroundImage: `linear-gradient(\r\n            180deg,rgba(0, 0, 0, 0.1) 0.03%,\r\n            rgba(0, 0, 0, 0.7) 46.25%,\r\n            rgba(0, 0, 0, 0.9) 65%),\r\n            url(\"${tmdb.imageUrl}${movie.backdrop_path}\")`,\r\n  };\r\n\r\n  const goToMoviePage = () => {\r\n    browserHistory.push(`/Mooweee/movie/${movie.id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"movie--card\" style={style} onClick={goToMoviePage}>\r\n        <div className=\"movie--card--row \">\r\n          <h1 className=\"movie--card--title\">{movie.original_title}</h1>\r\n          <div className=\"movie--card--row movie--card--row--genre\">\r\n            {movie.genre_ids.map((genreId) => {\r\n              let genre = tmdb.genres.find((genre) => genre.id === genreId);\r\n              return genre ? <MovieGenre genre={genre} key={genre.id} /> : \"\";\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"movie--card--row\">\r\n          <p className=\"movie--card--description\">\r\n            {movie.overview.slice(0, 100)}...\r\n          </p>\r\n          <MovieRatings rating={movie.vote_average} votes={movie.vote_count} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { ReactElement } from \"react\";\r\n\r\ninterface Props {\r\n  isExpanded: boolean;\r\n}\r\n\r\nexport default function ArrowDownSvg({ isExpanded }: Props): ReactElement {\r\n  return (\r\n    <svg\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={isExpanded ? \"\" : \"rotate\"}\r\n    >\r\n      <path\r\n        d=\"M5.84302 9.59299L11.5 15.25L17.157 9.59299L16.45 8.88599L11.5 13.836L6.55002 8.88599L5.84302 9.59299Z\"\r\n        fill=\"black\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import React, { ReactElement, useState } from \"react\";\r\nimport { RootState } from \"../../store/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Genre } from \"../../store/initial-state\";\r\nimport ArrowDownSvg from \"../shared/ArrowDownSvg\";\r\n\r\ninterface FilterWidgetProps {\r\n  filteredGenre: Genre;\r\n  setFilteredGenre(genre: Genre): void;\r\n}\r\n\r\nexport default function FilterWidget({\r\n  filteredGenre,\r\n  setFilteredGenre,\r\n}: FilterWidgetProps): ReactElement {\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const genres = useSelector((state: RootState) => state.tmdb.genres);\r\n\r\n  return (\r\n    <div className=\"filter\" onClick={() => setIsExpanded(!isExpanded)}>\r\n      <h4>{filteredGenre.name ? filteredGenre.name : \"All\"}</h4>\r\n      <span className=\"filter--svg--container\">\r\n        <ArrowDownSvg isExpanded={isExpanded} />\r\n      </span>\r\n      <input type=\"hidden\" value={filteredGenre.id} />\r\n      <div\r\n        className={`filter--dropdown scrollable scrollable--small ${\r\n          isExpanded ? \"\" : \"hidden\"\r\n        }`}\r\n      >\r\n        {genres.map((genre) => {\r\n          return (\r\n            <div\r\n              className=\"filter--dropdown--item\"\r\n              onClick={() => setFilteredGenre(genre)}\r\n              key={genre.id}\r\n            >\r\n              {genre.name ? genre.name : \"All\"}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { RootState } from \"../store/store\";\r\nimport * as actions from \"../components/Movies/movies-actions\";\r\n\r\nexport function usePopulateMovies() {\r\n  const tmdb = useSelector((state: RootState) => state.tmdb);\r\n  const movies = useSelector((state: RootState) => state.movies);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!movies.popular.length) {\r\n      (async () => {\r\n        const response = (\r\n          await axios.get(\r\n            `${tmdb.apiUrl}${tmdb.endpointPaths.popularMovies}?api_key=${tmdb.apiKey}&language=en-US&page=1`\r\n          )\r\n        ).data;\r\n\r\n        if (response && response.results) {\r\n          dispatch({\r\n            type: actions.MoviesActionTypes.ADD_POPULAR_MOVIES_TO_LIST,\r\n            payload: response.results,\r\n          });\r\n        }\r\n      })();\r\n    }\r\n\r\n    if (!movies.trending.length) {\r\n      (async () => {\r\n        const response = (\r\n          await axios.get(\r\n            `${tmdb.apiUrl}${tmdb.endpointPaths.trendingMoviesToday}?api_key=${tmdb.apiKey}&language=en-US&page=1`\r\n          )\r\n        ).data;\r\n\r\n        if (response && response.results) {\r\n          dispatch({\r\n            type: actions.MoviesActionTypes.ADD_TRENDING_MOVIES_TO_LIST,\r\n            payload: response.results,\r\n          });\r\n        }\r\n      })();\r\n    }\r\n  });\r\n}\r\n","import React, { ReactElement } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { RootState } from \"../../store/store\";\r\nimport MovieScroll, { MovieScrollSection } from \"../shared/MovieScroll\";\r\nimport { usePopulateMovies } from \"../../hooks/UsePopulateMovies\";\r\n\r\nexport default function Movies(): ReactElement {\r\n  const movies = useSelector((state: RootState) => state.movies);\r\n\r\n  usePopulateMovies();\r\n\r\n  return (\r\n    <>\r\n      <MovieScroll\r\n        section={MovieScrollSection.popular}\r\n        movies={movies.popular}\r\n      ></MovieScroll>\r\n      <MovieScroll\r\n        section={MovieScrollSection.trending}\r\n        movies={movies.trending}\r\n      ></MovieScroll>\r\n    </>\r\n  );\r\n}\r\n","import React, { ReactElement, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { RootState } from \"../../store/store\";\r\nimport * as actions from \"./movieInfo-actions\";\r\nimport { MovieInfo } from \"./movieInfo-reducer\";\r\nimport MovieGenre from \"../shared/MovieGenre\";\r\nimport MovieRatings from \"../shared/MovieRatings\";\r\n\r\ntype IdSlug = { id: string };\r\n\r\nexport default function MovieInfoPage({\r\n  match,\r\n}: RouteComponentProps<IdSlug>): ReactElement {\r\n  const tmdb = useSelector((state: RootState) => state.tmdb);\r\n  const movies = useSelector((state: RootState) => state.movieInfo.movies);\r\n  const movieInfo: MovieInfo | null =\r\n    movies.find(\r\n      (movie: MovieInfo) => movie && movie.id === parseInt(match.params.id)\r\n    ) ?? null;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!movieInfo) {\r\n      (async () => {\r\n        const movieResp = (\r\n          await axios.get(\r\n            `${tmdb.apiUrl}${tmdb.endpointPaths.searchMovieById}${match.params.id}?api_key=${tmdb.apiKey}&language=en-US`\r\n          )\r\n        ).data as MovieInfo;\r\n        const castResp = (\r\n          await axios.get(\r\n            `${tmdb.apiUrl}${tmdb.endpointPaths.cast}?api_key=${tmdb.apiKey}&language=en-US`.replace(\r\n              \"%ID%\",\r\n              match.params.id\r\n            )\r\n          )\r\n        ).data;\r\n\r\n        movieResp.cast = castResp.cast;\r\n\r\n        dispatch({\r\n          type: actions.MovieInfoActionTypes.ADD_MOVIE,\r\n          payload: movieResp,\r\n        });\r\n      })();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {movieInfo ? (\r\n        <div className=\"movie--wrapper\">\r\n          <div className=\"movie--section movie--section--details\">\r\n            <img\r\n              className=\"movie--poster\"\r\n              src={`${tmdb.imageUrl}${movieInfo.poster_path}`}\r\n              alt=\"movie poster\"\r\n            />\r\n            <div className=\"movie--section--info\">\r\n              <h1 className=\"movie--card--title\">{movieInfo.original_title}</h1>\r\n              <div className=\"movie--section--genre--wrap\">\r\n                {movieInfo.genres.map((genre) => (\r\n                  <MovieGenre genre={genre} key={genre.id} />\r\n                ))}\r\n              </div>\r\n              <p className=\"movie--text--info\">\r\n                Released: {movieInfo.release_date}\r\n              </p>\r\n              <p className=\"movie--text--info\">\r\n                Runtime: {movieInfo.runtime}mins\r\n              </p>\r\n              <MovieRatings\r\n                rating={movieInfo.vote_average}\r\n                votes={movieInfo.vote_count}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"movie--section\">\r\n            <h3 className=\"movie--section--title\">Description</h3>\r\n            <p className=\"movie--description\">{movieInfo.overview}</p>\r\n          </div>\r\n          <div className=\"movie--section\">\r\n            <h3 className=\"movie--section--title\">Actors</h3>\r\n            {movieInfo.cast.map((member) => (\r\n              <div className=\"actor-row\" key={member.id}>\r\n                {member.profile_path ? (\r\n                  <img\r\n                    className=\"actor--profile-picture\"\r\n                    src={`${tmdb.imageUrl}${member.profile_path}`}\r\n                    alt=\"\"\r\n                  />\r\n                ) : (\r\n                  <p className=\"actor--profile-picture--none\">No Photo</p>\r\n                )}\r\n                <div className=\"actor--info\">\r\n                  <h4>\r\n                    {member.name} - <i>{member.character}</i>\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"Loading ...\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { ReactElement, useState, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../store/store\";\r\nimport { Movie } from \"../Movies/movies-reducer\";\r\nimport MovieScroll, { MovieScrollSection } from \"../shared/MovieScroll\";\r\n\r\ntype SearchSlug = { query: string };\r\n\r\nexport default function SearchPage({\r\n  match,\r\n}: RouteComponentProps<SearchSlug>): ReactElement {\r\n  const tmdb = useSelector((state: RootState) => state.tmdb);\r\n  const [searchResults, setSearchResults] = useState<Movie[]>([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = (\r\n        await axios.get(\r\n          `${tmdb.apiUrl}${tmdb.endpointPaths.searchMovie}?api_key=${tmdb.apiKey}&query=${match.params.query}&include_adult=flse&page=1`\r\n        )\r\n      ).data;\r\n\r\n      setSearchResults(response.results as Movie[]);\r\n    })();\r\n  }, [match]);\r\n  return (\r\n    <>\r\n      <MovieScroll\r\n        movies={searchResults}\r\n        section={MovieScrollSection.search}\r\n      ></MovieScroll>\r\n    </>\r\n  );\r\n}\r\n","import React, { ReactElement, useState, useEffect } from \"react\";\r\nimport { RouteComponentProps, Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../store/store\";\r\n\r\nimport MovieCard from \"../shared/MovieCard\";\r\nimport { Genre } from \"../../store/initial-state\";\r\nimport { Movie } from \"../Movies/movies-reducer\";\r\nimport MovieGenre from \"../shared/MovieGenre\";\r\nimport { usePopulateMovies } from \"../../hooks/UsePopulateMovies\";\r\n\r\nexport default function GenresPage({\r\n  location,\r\n}: RouteComponentProps): ReactElement {\r\n  const tmdb = useSelector((state: RootState) => state.tmdb);\r\n  const moviesFromState = useSelector((state: RootState) => state.movies);\r\n  const [genreFromQuery, setGenreFromQuery] = useState<Genre>({\r\n    id: -1,\r\n    name: \"\",\r\n  });\r\n  const [movies, setMovies] = useState([] as Movie[]);\r\n\r\n  usePopulateMovies();\r\n\r\n  useEffect(() => {\r\n    const genreValueFromQuery = decodeURI(\r\n      location.search.replace(\"?genre=\", \"\")\r\n    );\r\n    const genreMatched = tmdb.genres.find(\r\n      (genre) => genre.name.toLowerCase() === genreValueFromQuery.toLowerCase()\r\n    );\r\n\r\n    if (genreMatched) {\r\n      setGenreFromQuery(genreMatched);\r\n    }\r\n\r\n    const concatinatedMovies = [\r\n      ...moviesFromState.popular.filter((movie) =>\r\n        movie.genre_ids.some((id) => id === genreFromQuery.id)\r\n      ),\r\n    ];\r\n\r\n    moviesFromState.trending.forEach((movie) => {\r\n      if (\r\n        concatinatedMovies.some((m) => m.id === movie.id) ||\r\n        movie.genre_ids.some((id) => id !== genreFromQuery.id)\r\n      ) {\r\n        // Skipping dupliciate movie\r\n        return;\r\n      }\r\n\r\n      concatinatedMovies.push(movie);\r\n    });\r\n\r\n    setMovies(concatinatedMovies);\r\n  }, [\r\n    location,\r\n    moviesFromState.popular,\r\n    moviesFromState.trending,\r\n    genreFromQuery,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      {genreFromQuery.id !== -1 ? (\r\n        <>\r\n          <h1 className=\"headline--genre\">{genreFromQuery.name} movies:</h1>\r\n          <div className=\"genre--movies--wrapper\">\r\n            {movies.length ? (\r\n              movies.map((movie) => (\r\n                <MovieCard tmdb={tmdb} movie={movie} key={movie.id}></MovieCard>\r\n              ))\r\n            ) : (\r\n              <>\r\n                <h1 className=\"headline--genre\">\r\n                  Ahh, that's embarrassing... Try picking other genre:\r\n                </h1>\r\n                <div className=\"genre--genres-wrapper\">\r\n                  {tmdb.genres.map(\r\n                    (genre) =>\r\n                      genre.id !== -1 && (\r\n                        <Link\r\n                          to={`/Mooweee/genres?genre=${genre.name}`}\r\n                          key={genre.id}\r\n                        >\r\n                          <MovieGenre genre={genre}></MovieGenre>\r\n                        </Link>\r\n                      )\r\n                  )}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h1 className=\"headline--genre\">Genre to choose:</h1>\r\n          <div className=\"genre--genres-wrapper\">\r\n            {tmdb.genres.map(\r\n              (genre) =>\r\n                genre.id !== -1 && (\r\n                  <Link\r\n                    to={`/Mooweee/genres?genre=${genre.name}`}\r\n                    key={genre.id}\r\n                  >\r\n                    <MovieGenre genre={genre}></MovieGenre>\r\n                  </Link>\r\n                )\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { ReactElement, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../store/store\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function RandomPage(): ReactElement {\r\n  const movies = useSelector((state: RootState) => state.movies);\r\n  const browserHistory = useHistory();\r\n\r\n  useEffect(() => {\r\n    const movieList = [...movies.popular, ...movies.trending];\r\n    const randomNum = Math.floor(Math.random() * movieList.length);\r\n\r\n    browserHistory.push(`/Mooweee/movie/${movieList[randomNum].id}`);\r\n  });\r\n\r\n  return <h1>Picking random movie for you!</h1>;\r\n}\r\n","import React, { ReactElement } from \"react\";\r\n\r\nexport default function Footer(): ReactElement {\r\n  return (\r\n    <div className=\"footer\">\r\n      <p>\r\n        This product uses the TMDb API but is not endorsed or certified by TMDb.\r\n      </p>\r\n      <p>\r\n        Source code can be found on{\" \"}\r\n        <a href=\"https://github.com/Airidc/Mooweee\" target=\"blank\">\r\n          Github\r\n          <svg\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M20.88 3.099C20.147 2.366 19.265 2 18.233 2H5.746C4.714 2 3.832 2.366 3.099 3.099C2.366 3.832 2 4.714 2 5.746V18.233C2 19.265 2.366 20.147 3.099 20.88C3.832 21.613 4.714 21.979 5.746 21.979H8.66C8.85 21.979 8.993 21.972 9.089 21.959C9.20069 21.9366 9.30151 21.877 9.375 21.79C9.47 21.69 9.518 21.545 9.518 21.355L9.511 20.47C9.507 19.906 9.505 19.46 9.505 19.13L9.205 19.182C9.015 19.217 8.775 19.232 8.484 19.228C8.18069 19.2224 7.87834 19.192 7.58 19.137C7.2624 19.0784 6.96343 18.9446 6.708 18.747C6.44049 18.5446 6.24097 18.2656 6.136 17.947L6.006 17.647C5.89643 17.4104 5.75877 17.1877 5.596 16.984C5.41 16.741 5.221 16.577 5.03 16.49L4.94 16.425C4.87724 16.3801 4.82016 16.3277 4.77 16.269C4.72209 16.2145 4.68265 16.1532 4.653 16.087C4.627 16.026 4.649 15.976 4.718 15.937C4.788 15.897 4.913 15.878 5.096 15.878L5.356 15.918C5.529 15.952 5.744 16.056 5.999 16.229C6.25706 16.4049 6.47263 16.6362 6.63 16.906C6.83 17.261 7.07 17.532 7.352 17.719C7.634 17.905 7.918 17.999 8.204 17.999C8.49 17.999 8.737 17.977 8.946 17.934C9.14811 17.8922 9.34451 17.8264 9.531 17.738C9.609 17.158 9.821 16.71 10.168 16.398C9.71838 16.3539 9.27276 16.2757 8.835 16.164C8.40779 16.0466 7.99694 15.8763 7.612 15.657C7.20924 15.4377 6.8535 15.1414 6.565 14.785C6.288 14.438 6.06 13.983 5.882 13.42C5.705 12.856 5.616 12.205 5.616 11.468C5.616 10.419 5.958 9.526 6.643 8.788C6.323 8 6.353 7.115 6.734 6.136C6.986 6.057 7.359 6.116 7.853 6.311C8.347 6.506 8.709 6.673 8.939 6.811C9.169 6.951 9.353 7.068 9.492 7.163C10.305 6.93675 11.1451 6.82303 11.989 6.825C12.848 6.825 13.68 6.938 14.487 7.163L14.981 6.851C15.361 6.62285 15.7618 6.43133 16.178 6.279C16.638 6.105 16.988 6.058 17.232 6.136C17.622 7.116 17.656 8 17.335 8.789C18.02 9.526 18.363 10.419 18.363 11.469C18.363 12.206 18.274 12.859 18.096 13.426C17.919 13.994 17.689 14.449 17.407 14.792C17.1134 15.1439 16.7562 15.4373 16.354 15.657C15.934 15.891 15.526 16.06 15.131 16.164C14.6933 16.2761 14.2477 16.3546 13.798 16.399C14.248 16.789 14.474 17.404 14.474 18.245V21.355C14.474 21.502 14.495 21.621 14.539 21.712C14.5592 21.7558 14.5881 21.7952 14.6238 21.8276C14.6595 21.8601 14.7014 21.8851 14.747 21.901C14.843 21.935 14.927 21.957 15.001 21.965C15.075 21.975 15.181 21.978 15.319 21.978H18.233C19.265 21.978 20.147 21.612 20.88 20.879C21.612 20.147 21.979 19.264 21.979 18.232V5.746C21.979 4.714 21.612 3.832 20.879 3.099H20.88Z\"\r\n              fill=\"black\"\r\n            />\r\n          </svg>\r\n        </a>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"../store/store\";\n\nimport Header from \"./shared/Header\";\nimport Movies from \"./Movies/Movies\";\nimport MovieInfoPage from \"./MovieInfo/MovieInfoPage\";\nimport SearchPage from \"./SearchPage/SearchPage\";\nimport GenresPage from \"./GenresPage/GenresPage\";\nimport RandomPage from \"./RandomPage/RandomPage\";\nimport Footer from \"./shared/Footer\";\n\nfunction App() {\n  const closeMenu = (e: React.MouseEvent) => {\n    e.persist();\n    if (e.currentTarget.classList.contains(\"nav--hamburger\")) {\n      return;\n    }\n\n    let menuElem = document.querySelector(\".nav\");\n\n    if (menuElem && !menuElem.classList.contains(\"hide-mobile\")) {\n      // close menu\n      menuElem.classList.add(\"hide-mobile\");\n      e.preventDefault();\n    }\n  };\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Header></Header>\n        <div className=\"content\" onClick={closeMenu}>\n          <Route exact path=\"/Mooweee\" component={Movies}></Route>\n          <Route\n            exact\n            path=\"/Mooweee/movie/:id\"\n            component={MovieInfoPage}\n          ></Route>\n          <Route path=\"/Mooweee/search/:query\" component={SearchPage}></Route>\n          <Route path=\"/Mooweee/genres\" component={GenresPage}></Route>\n          <Route exact path=\"/Mooweee/random\" component={RandomPage}></Route>\n        </div>\n        <Footer></Footer>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./style/site-styles.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}